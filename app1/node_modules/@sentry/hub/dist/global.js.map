{"version":3,"file":"global.js","sourceRoot":"","sources":["../src/global.ts"],"names":[],"mappings":";;AAAA,2CAAqD;AACrD,6BAAyC;AAGzC,wCAAwC;AACxC,SAAgB,cAAc;IAC5B,IAAM,OAAO,GAAQ,sBAAe,EAAE,CAAC;IACvC,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI;QACzC,GAAG,EAAE,SAAS;KACf,CAAC;IACF,OAAO,OAAO,CAAC,UAAU,CAAC;AAC5B,CAAC;AAND,wCAMC;AAED;;;;GAIG;AACH,SAAgB,QAAQ,CAAC,GAAS;IAChC,IAAM,QAAQ,GAAG,cAAc,EAAE,CAAC;IAClC,IAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC;IAC5B,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,OAAO,MAAM,CAAC;AAChB,CAAC;AALD,4BAKC;AAED;;;;;;GAMG;AACH,SAAgB,aAAa;IAC3B,IAAM,QAAQ,GAAG,cAAc,EAAE,CAAC;IAElC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,iBAAW,CAAC,EAAE;QAC1D,QAAQ,CAAC,GAAG,GAAG,IAAI,SAAG,EAAE,CAAC;KAC1B;IAED,OAAO,QAAQ,CAAC,GAAG,CAAC;AACtB,CAAC;AARD,sCAQC;AAED;;;;GAIG;AACH,SAAgB,iBAAiB,CAAC,OAAY;IAC5C,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE;QAC3D,OAAO,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC;KAC/B;SAAM;QACL,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC;QACxB,OAAO,CAAC,UAAU,CAAC,GAAG,GAAG,IAAI,SAAG,EAAE,CAAC;QACnC,OAAO,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC;KAC/B;AACH,CAAC;AARD,8CAQC","sourcesContent":["import { getGlobalObject } from '@sentry/utils/misc';\nimport { API_VERSION, Hub } from './hub';\nimport { Carrier } from './interfaces';\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier: any = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    hub: undefined,\n  };\n  return carrier.__SENTRY__;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub?: Hub): Hub | undefined {\n  const registry = getMainCarrier();\n  const oldHub = registry.hub;\n  registry.hub = hub;\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  const registry = getMainCarrier();\n\n  if (!registry.hub || registry.hub.isOlderThan(API_VERSION)) {\n    registry.hub = new Hub();\n  }\n\n  return registry.hub;\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n */\nexport function getHubFromCarrier(carrier: any): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return carrier.__SENTRY__.hub;\n  } else {\n    carrier.__SENTRY__ = {};\n    carrier.__SENTRY__.hub = new Hub();\n    return carrier.__SENTRY__.hub;\n  }\n}\n"]}