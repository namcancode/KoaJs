{"version":3,"file":"onuncaughtexception.js","sourceRoot":"","sources":["../../src/integrations/onuncaughtexception.ts"],"names":[],"mappings":";;AACA,wCAA+C;AAE/C,uCAAuC;AACvC;IAYE;;OAEG;IACH,6BACmB,OAEX;QAFW,wBAAA,EAAA,YAEX;QAFW,YAAO,GAAP,OAAO,CAElB;QAjBR;;WAEG;QACI,SAAI,GAAW,qBAAqB,CAAC;QAC5C;;WAEG;QACa,YAAO,GAA2B,2BAAgB;QAChE,2BAA2B;QAC3B,IAAI,CAAC,OAAO,CAAC,YAAY,CAC1B,CAAC;IAQC,CAAC;IACJ;;OAEG;IACI,qCAAO,GAAd;QACE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC;IACH,0BAAC;AAAD,CAAC,AA1BD,IA0BC;AA1BY,kDAAmB","sourcesContent":["import { Integration } from '@sentry/types';\nimport { makeErrorHandler } from '../handlers';\n\n/** Global Promise Rejection handler */\nexport class OnUncaughtException implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = 'OnUncaughtException';\n  /**\n   * @inheritDoc\n   */\n  public readonly handler: (error: Error) => void = makeErrorHandler(\n    // tslint:disable-next-line\n    this.options.onFatalError,\n  );\n  /**\n   * @inheritDoc\n   */\n  public constructor(\n    private readonly options: {\n      onFatalError?(firstError: Error, secondError?: Error): void;\n    } = {},\n  ) {}\n  /**\n   * @inheritDoc\n   */\n  public install(): void {\n    global.process.on('uncaughtException', this.handler);\n  }\n}\n"]}