{"version":3,"file":"sdk.js","sourceRoot":"","sources":["../src/sdk.ts"],"names":[],"mappings":";;AAAA,qCAA6E;AAE7E,mCAAsC;AACtC,+CAAwG;AAE3F,QAAA,mBAAmB,GAAG;IACjC,SAAS;IACT,IAAI,mBAAgB,CAAC,MAAM,EAAE;IAC7B,IAAI,mBAAgB,CAAC,cAAc,EAAE;IACrC,IAAI,mBAAgB,CAAC,gBAAgB,EAAE;IACvC,kBAAkB;IAClB,IAAI,sBAAO,EAAE;IACb,IAAI,mBAAI,EAAE;IACV,kBAAkB;IAClB,IAAI,kCAAmB,EAAE;IACzB,IAAI,mCAAoB,EAAE;IAC1B,OAAO;IACP,IAAI,2BAAY,EAAE;CACnB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2CG;AACH,SAAgB,IAAI,CAAC,OAAoB;IACvC,kBAAW,CAAC,mBAAU,EAAE,OAAO,EAAE,2BAAmB,CAAC,CAAC;AACxD,CAAC;AAFD,oBAEC","sourcesContent":["import { initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { NodeOptions } from './backend';\nimport { NodeClient } from './client';\nimport { Console, Http, LinkedErrors, OnUncaughtException, OnUnhandledRejection } from './integrations';\n\nexport const defaultIntegrations = [\n  // Common\n  new CoreIntegrations.Dedupe(),\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  // Native Wrappers\n  new Console(),\n  new Http(),\n  // Global Handlers\n  new OnUncaughtException(),\n  new OnUnhandledRejection(),\n  // Misc\n  new LinkedErrors(),\n];\n\n/**\n * The Sentry Node SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible in the\n * main entry module. To set context information or send manual events, use the\n * provided methods.\n *\n * @example\n * const { init } = require('@sentry/node');\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n *\n *\n * @example\n * const { configureScope } = require('@sentry/node');\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTags({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n *\n * @example\n * const { addBreadcrumb } = require('@sentry/node');\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n *\n * @example\n * const Sentry = require('@sentry/node');\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n *\n * @see NodeOptions for documentation on configuration options.\n */\nexport function init(options: NodeOptions): void {\n  initAndBind(NodeClient, options, defaultIntegrations);\n}\n"]}