{"version":3,"file":"https.js","sourceRoot":"","sources":["../../src/transports/https.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,6BAA+B;AAC/B,+BAAuC;AAEvC,kCAAkC;AAClC;IAAoC,kCAAa;IAC/C,+CAA+C;IAC/C,wBAA0B,OAAyB;QAAnD,YACE,kBAAM,OAAO,CAAC,SAEf;QAHyB,aAAO,GAAP,OAAO,CAAkB;QAEjD,KAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC;;IACtE,CAAC;IAED;;OAEG;IACU,qCAAY,GAAzB,UAA0B,KAAkB;;;gBAC1C,sBAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,EAAC;;;KAC1C;IACH,qBAAC;AAAD,CAAC,AAbD,CAAoC,oBAAa,GAahD;AAbY,wCAAc","sourcesContent":["import { SentryEvent, SentryResponse, TransportOptions } from '@sentry/types';\nimport * as https from 'https';\nimport { BaseTransport } from './base';\n\n/** Node https module transport */\nexport class HTTPSTransport extends BaseTransport {\n  /** Create a new instance and set this.agent */\n  public constructor(public options: TransportOptions) {\n    super(options);\n    this.client = new https.Agent({ keepAlive: true, maxSockets: 100 });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async captureEvent(event: SentryEvent): Promise<SentryResponse> {\n    return this.sendWithModule(https, event);\n  }\n}\n"]}